import { MigrationInterface, QueryRunner } from 'typeorm';

export class SeedActor1754486179127 implements MigrationInterface {
  public async up(queryRunner: QueryRunner): Promise<void> {
    await queryRunner.query(`
      INSERT INTO "Actor" ("firstName", "lastName") VALUES 
      ('Alain', 'Chabat'),
      ('Alain', 'Chapuis'),
      ('Alexandra', 'Saadoun'),
      ('Alexandre', 'Astier'),
      ('Alexis', 'H√©non'),
      ('Anne', 'Beno√Æt'),
      ('Anne', 'Girouard'),
      ('Anouk', 'Grinberg'),
      ('Antoine', 'de Caunes'),
      ('Audrey', 'Fleurot'),
      ('Aur√©lien', 'Portehaut'),
      ('Axelle', 'Laffont'),
      ('Bernard', 'Lecoq'),
      ('Brice', 'Fournier'),
      ('Bruno', 'Fontaine'),
      ('Bruno', 'Salomone'),
      ('Carlo', 'Brandt'),
      ('Caroline', 'Ferrus'),
      ('Caroline', 'Pascal'),
      ('Christian', 'Bujeau'),
      ('Christian', 'Clavier'),
      ('Claire', 'Nadeau'),
      ('Clovis', 'Cornillac'),
      ('√âlie', 'Semoun'),
      ('√âmilie', 'Dequenne'),
      ('Emmanuel', 'Meirieu'),
      ('Franck', 'Pitiot'),
      ('Fran√ßois', 'Levantal'),
      ('Fran√ßois', 'Morel'),
      ('Fran√ßois', 'Rollin'),
      ('Frank', 'Pitiot'),
      ('Georges', 'Beller'),
      ('G√©raldine', 'Nakache'),
      ('Gilles', 'Graveleau'),
      ('Guillaume', 'Briat'),
      ('Guillaume', 'Gallienne'),
      ('Jacques', 'Chambon'),
      ('Jean-Marc', 'Avocat'),
      ('Jean-Christophe', 'Hembert'),
      ('Jean-Robert', 'Lombard'),
      ('Jo√´lle', 'Sevilla'),
      ('Jos√©e', 'Drevon'),
      ('Lan', 'Truong'),
      ('Laurent', 'Gamelon'),
      ('Lionnel', 'Astier'),
      ('Lo√Øc', 'Varraut'),
      ('Lor√°nt', 'Deutsch'),
      ('Magali', 'Saadoun'),
      ('Manu', 'Payet'),
      ('Nicolas', 'Gabion'),
      ('Pascal', 'Demolon'),
      ('Pascal', 'Vincent'),
      ('Patrick', 'Chesnais'),
      ('Philippe', 'Nahon'),
      ('Pierre', 'Mondy'),
      ('Serge', 'Papagalli'),
      ('Simon', 'Astier'),
      ('St√©phane', 'Margot'),
      ('Sting', ''),
      ('Tcheky', 'Karyo'),
      ('Thibault', 'Roux'),
      ('Thomas', 'Cousseau'),
      ('Tony', 'Saba'),
      ('Val√©rie', 'Keruzor√©'
      ('Vanessa', 'Guedj'
      ('Yvan', 'Le Bolloc''h'),
      ON CONFLICT DO NOTHING
    `);

    console.log('‚úÖ Actor ins√©r√©s avec succ√®s');
  }

  public async down(queryRunner: QueryRunner): Promise<void> {
    await queryRunner.query(`
      DELETE FROM "Actor" WHERE ("firstName", "lastName") IN (
        ('Alain', 'Chabat'),
        ('Alain', 'Chapuis'),
        ('Alexandra', 'Saadoun'),
        ('Alexandre', 'Astier'),
        ('Alexis', 'H√©non'),
        ('Anne', 'Beno√Æt'),
        ('Anne', 'Girouard'),
        ('Anouk', 'Grinberg'),
        ('Antoine', 'de Caunes'),
        ('Audrey', 'Fleurot'),
        ('Aur√©lien', 'Portehaut'),
        ('Axelle', 'Laffont'),
        ('Bernard', 'Lecoq'),
        ('Brice', 'Fournier'),
        ('Bruno', 'Fontaine'),
        ('Bruno', 'Salomone'),
        ('Carlo', 'Brandt'),
        ('Caroline', 'Ferrus'),
        ('Caroline', 'Pascal'),
        ('Christian', 'Bujeau'),
        ('Christian', 'Clavier'),
        ('Claire', 'Nadeau'),
        ('Clovis', 'Cornillac'),
        ('√âlie', 'Semoun'),
        ('√âmilie', 'Dequenne'),
        ('Emmanuel', 'Meirieu'),
        ('Franck', 'Pitiot'),
        ('Fran√ßois', 'Levantal'),
        ('Fran√ßois', 'Morel'),
        ('Fran√ßois', 'Rollin'),
        ('Frank', 'Pitiot'),
        ('Georges', 'Beller'),
        ('G√©raldine', 'Nakache'),
        ('Gilles', 'Graveleau'),
        ('Guillaume', 'Briat'),
        ('Guillaume', 'Gallienne'),
        ('Jacques', 'Chambon'),
        ('Jean-Marc', 'Avocat'),
        ('Jean-Christophe', 'Hembert'),
        ('Jean-Robert', 'Lombard'),
        ('Jo√´lle', 'Sevilla'),
        ('Jos√©e', 'Drevon'),
        ('Lan', 'Truong'),
        ('Laurent', 'Gamelon'),
        ('Lionnel', 'Astier'),
        ('Lo√Øc', 'Varraut'),
        ('Lor√°nt', 'Deutsch'),
        ('Magali', 'Saadoun'),
        ('Manu', 'Payet'),
        ('Nicolas', 'Gabion'),
        ('Pascal', 'Demolon'),
        ('Pascal', 'Vincent'),
        ('Patrick', 'Chesnais'),
        ('Philippe', 'Nahon'),
        ('Pierre', 'Mondy'),
        ('Serge', 'Papagalli'),
        ('Simon', 'Astier'),
        ('St√©phane', 'Margot'),
        ('Sting', ''),
        ('Tcheky', 'Karyo'),
        ('Thibault', 'Roux'),
        ('Thomas', 'Cousseau'),
        ('Tony', 'Saba'),
        ('Val√©rie', 'Keruzor√©'
        ('Vanessa', 'Guedj'
        ('Yvan', 'Le Bolloc''h'),
      )
    `);

    console.log('üóëÔ∏è Actor supprim√©s');
  }
}
